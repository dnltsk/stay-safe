timeTable <- NULL
totalTrains <- 0
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";", nrows=1000)
#data$HALTESTELLEN_NAME
stationBoolean <- grepl("Hart", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
length(stationBoolean)
for (i in 1:10000) {
#length(stationBoolean)) {
if (stationBoolean[i]) {
print(i)
}
}
for (i in 1:1000) {
#length(stationBoolean)) {
if (stationBoolean[i]) {
print(i)
}
}
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";", nrows=10000)
stationBoolean <- grepl("Hart", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
length(stationBoolean)
for (i in 1:1000) {
#length(stationBoolean)) {
if (stationBoolean[i]) {
print(i)
}
}
for (i in 1:10000) {
#length(stationBoolean)) {
if (stationBoolean[i]) {
print(i)
}
}
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";", nrows=50000)
stationBoolean <- grepl("Hart", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
length(stationBoolean)
for (i in 1:10000) {
#length(stationBoolean)) {
if (stationBoolean[i]) {
print(i)
}
}
#length(stationBoolean)) {
if (stationBoolean[i] == TRUE) {
print(i)
}
for (i in 1:10000) {
#length(stationBoolean)) {
if (stationBoolean[i] == TRUE) {
print(i)
}
}
for (i in 1:50000) {
#length(stationBoolean)) {
if (stationBoolean[i] == TRUE) {
print(i)
}
}
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";")
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";", nrows=100)
data$HALTESTELLEN_NAME
stationBoolean <- grepl("Bad", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
for (i in 1:length(stationBoolean)) {
#length(stationBoolean)) {
if (stationBoolean[i] == TRUE) {
print(i)
}
}
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";")
stationBoolean <- grepl("Hart", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
length(stationBoolean)
for (i in 1:length(stationBoolean)) {
#length(stationBoolean)) {
if (stationBoolean[i] == TRUE) {
print(i)
}
}
for (i in 1:length(stationBoolean)) {
#length(stationBoolean)) {
if (stationBoolean[i] == TRUE) {
print(i)
trainData <- NULL
trainData$timeTag <- data$ABFAHRTSZEIT[i]
print(trainData$timeTag)
trainData$trainType <- data$LINIEN_TEXT[i]
print(trainData$trainType)
trainData$A1 <- 60.0 + runif(1, -50.0, 50)
trainData$A1
trainData$A2 <- 60.0 + runif(1, -50.0, 50)
trainData$B1 <- 60.0 + runif(1, -50.0, 50)
trainData$B2 <- 60.0 + runif(1, -50.0, 50)
trainData$C1 <- 60.0 + runif(1, -50.0, 50)
trainData$C2 <- 60.0 + runif(1, -50.0, 50)
trainData$D1 <- 60.0 + runif(1, -50.0, 50)
trainData$D2 <- 60.0 + runif(1, -50.0, 50)
trainData$E1 <- 60.0 + runif(1, -50.0, 50)
trainData$E2 <- 60.0 + runif(1, -50.0, 50)
trainData$F1 <- 60.0 + runif(1, -50.0, 50)
trainData$F2 <- 60.0 + runif(1, -50.0, 50)
#timeTable <- append(timeTable, trainData)
write.table(trainData, file = "trainData.csv", sep = ",", quote = FALSE, append = TRUE, col.names = FALSE)
}
}
library(RcppCCTZ)
library(RcppCCTZ)
library(ggplot2)
library(spatstat)
library(RColorBrewer)
library(RColorBrewer)
setwd("~/Schreibtisch/hacktrain/git/stay-safe/train-filling/")
timeTable <- NULL
totalTrains <- 0
data <- read.csv('../data/2018-06-21istdaten.csv', header = T, sep=";")
stationBoolean <- grepl("Hardbr", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
trainBoolean <- grepl("S", paste(data$LINIEN_TEXT), fixed=TRUE)
stationBoolean <- grepl("Hardbr", paste(data$HALTESTELLEN_NAME), fixed = TRUE)
trainBoolean <- grepl("S", paste(data$LINIEN_TEXT), fixed=TRUE)
timeTag <- data$ABFAHRTSZEIT
for (i in 1:length(timeTag)) {
if (nchar(paste(timeTag[i])) > 1) {
if (stationBoolean[i] == TRUE) {
if (trainBoolean[i] == TRUE) {
#print(i)
#print(data$HALTESTELLEN_NAME[i])
#print(data$LINIEN_TEXT[i])
trainData <- NULL
trainData$timeTag <- timeTag[i]
trainData$trainType <- data$LINIEN_TEXT[i]
write.table(trainData, file = "trainData.csv", sep = ",", quote = FALSE, append = TRUE, col.names = FALSE)
}
}
}
}
data2 <- read.csv("trainData.csv", header=F)
length(data2$V1)
for (i in 1:length(timeTag)) {
if (nchar(paste(timeTag[i])) > 1) {
if (stationBoolean[i] == TRUE) {
if (trainBoolean[i] == TRUE) {
#print(i)
#print(data$HALTESTELLEN_NAME[i])
#print(data$LINIEN_TEXT[i])
trainData <- NULL
trainData$timeTag <- timeTag[i]
trainData$trainType <- data$LINIEN_TEXT[i]
write.table(trainData, file = "trainData.csv", sep = ",", quote = FALSE, append = TRUE, col.names = FALSE)
}
}
}
}
data2 <- read.csv("trainData.csv", header=F)
length(data2$V1)
index <- order(data2$V2)
length(index)
data3 <- NULL
for (i in 1:length(index)) {
print(data2$V2[index[i]])
data3$timeTag <- data2$V2[index[i]]
data3$trainType <- data2$V3[index[i]]
data3$A <- 60.0 + runif(1, -50.0, 50)
data3$B <- 60.0 + runif(1, -50.0, 50)
data3$C <- 60.0 + runif(1, -50.0, 50)
data3$D <- 60.0 + runif(1, -50.0, 50)
data3$E <- 60.0 + runif(1, -50.0, 50)
data3$F <- 60.0 + runif(1, -50.0, 50)
write.table(data3, file = "timeTable.csv", sep = ",", quote = FALSE, append = TRUE, col.names = FALSE)
}
for (i in 1:length(index)) {
print(data2$V2[index[i]])
data3$timeTag <- data2$V2[index[i]]
data3$trainType <- data2$V3[index[i]]
data3$A <- round(60.0 + runif(1, -50.0, 50))
data3$B <- round(60.0 + runif(1, -50.0, 50))
data3$C <- round(60.0 + runif(1, -50.0, 50))
data3$D <- round(60.0 + runif(1, -50.0, 50))
data3$E <- round(60.0 + runif(1, -50.0, 50))
data3$F <- round(60.0 + runif(1, -50.0, 50))
write.table(data3, file = "timeTable.csv", sep = ",", quote = FALSE, append = TRUE, col.names = FALSE)
}
for (i in 1:length(index)) {
print(data2$V2[index[i]])
data3$timeTag <- data2$V2[index[i]]
data3$trainType <- data2$V3[index[i]]
data3$A <- round(60.0 + runif(1, -50.0, 50))
data3$B <- round(60.0 + runif(1, -50.0, 50))
data3$C <- round(60.0 + runif(1, -50.0, 50))
data3$D <- round(60.0 + runif(1, -50.0, 50))
data3$E <- round(60.0 + runif(1, -50.0, 50))
data3$F <- round(60.0 + runif(1, -50.0, 50))
write.table(data3, file = "timeTable.csv", sep = ",", quote = FALSE, append = TRUE, col.names = FALSE)
}
library(RcppCCTZ)
library(ggplot2)
library(spatstat)
library(RcppCCTZ)
library(ggplot2)
library(spatstat)
library(RColorBrewer)
setwd("~/Schreibtisch/hacktrain/git/stay-safe/timeTable/")
dataPlatform <- read.csv('../heatmap-creation/data.csv', header = T)
dataTrains <- read.csv('../timeTable.csv', header = T)
dataTrains <- read.csv('../train-filling/timeTable.csv', header = T)
dataPlatform <- read.csv('../heatmap-creation/data.csv', header = F)
dataTrains <- read.csv('../train-filling/timeTable.csv', header = f)
dataTrains <- read.csv('../train-filling/timeTable.csv', header = F)
dataPlatform$V1
dataPlatform$V2
for (currentHour in 0:23) {
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
currentTime <- parse(currentHour, ":", currentMinute, sep="")
if (currentHour < 10) {
currentTime <- parse("0", currentHour, ":", currentMinute, sep="")
if (currentMinute < 10) {
currentTime <- parse("0", currentHour, ":0", currentMinute, sep="")
}
}
print(currentTime)
}
}
print(currentTime)
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
currentTime <- parse(currentHour, ":", currentMinute, sep="")
print(currentTime)
if (currentHour < 10) {
currentTime <- parse("0", currentHour, ":", currentMinute, sep="")
if (currentMinute < 10) {
currentTime <- parse("0", currentHour, ":0", currentMinute, sep="")
}
}
print(currentTime)
}
}
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
currentTime <- parse(toString(currentHour), ":", toString(currentMinute), sep="")
print(currentTime)
if (currentHour < 10) {
currentTime <- parse("0", toString(currentHour), ":", toString(currentMinute), sep="")
if (currentMinute < 10) {
currentTime <- parse("0", toString(currentHour), ":0", toString(currentMinute), sep="")
}
}
print(currentTime)
}
}
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
currentTime <- paste(toString(currentHour), ":", toString(currentMinute), sep="")
print(currentTime)
if (currentHour < 10) {
currentTime <- paste("0", toString(currentHour), ":", toString(currentMinute), sep="")
if (currentMinute < 10) {
currentTime <- paste("0", toString(currentHour), ":0", toString(currentMinute), sep="")
}
}
print(currentTime)
}
}
toString(currentHour)
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
currentTime <- paste(toString(currentHour), ":", toString(currentMinute), sep="")
toString(currentHour)
print(currentTime)
if (currentHour < 10) {
currentTime <- paste("0", toString(currentHour), ":", toString(currentMinute), sep="")
if (currentMinute < 10) {
currentTime <- paste("0", toString(currentHour), ":0", toString(currentMinute), sep="")
}
}
print(currentTime)
}
}
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
print(currentHour)
currentTime <- paste(toString(currentHour), ":", toString(currentMinute), sep="")
toString(currentHour)
print(currentTime)
if (currentHour < 10) {
currentTime <- paste("0", toString(currentHour), ":", toString(currentMinute), sep="")
if (currentMinute < 10) {
currentTime <- paste("0", toString(currentHour), ":0", toString(currentMinute), sep="")
}
}
print(currentTime)
}
}
for (currentHour in 0:23) {
for (currentMinute in 0:59) {
print(currentHour)
currentTime <- paste(toString(currentHour), ":", toString(currentMinute), sep="")
toString(currentHour)
print(currentTime)
if (currentHour < 10) {
currentTime <- paste("0", toString(currentHour), ":", toString(currentMinute), sep="")
if (currentMinute < 10) {
currentTime <- paste("0", toString(currentHour), ":0", toString(currentMinute), sep="")
}
}
print(currentTime)
}
}
for (currentHour in 0:23) {
print(currentHour)
}
setwd("~/Schreibtisch/hacktrain/git/stay-safe/timeTable/")
library(RcppCCTZ)
library(ggplot2)
library(spatstat)
library(RColorBrewer)
